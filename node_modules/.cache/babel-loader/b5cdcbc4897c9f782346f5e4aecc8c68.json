{"remainingRequest":"/Users/careershe03/Desktop/front-korea/admin/node_modules/babel-loader/lib/index.js!/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/careershe03/Desktop/front-korea/admin/src/views/company/list/UsageRecord/QualityDay.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/careershe03/Desktop/front-korea/admin/src/views/company/list/UsageRecord/QualityDay.vue","mtime":1623981807678},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvY2FyZWVyc2hlMDMvRGVza3RvcC9mcm9udC1rb3JlYS9hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLwovLwovLwovLwovLwovLwppbXBvcnQgY3J1ZE1peCBmcm9tICJAL21peGlucy9jcnVkTWl4IjsKLyoqCiAqIFRPRE865q+P5aSpL+avj+aciOi0qOajgOivpuaDhQogKi8KCmV4cG9ydCBkZWZhdWx0IHsKICBtaXhpbnM6IFtjcnVkTWl4XSwKICBwcm9wczogewogICAgcm93OiB7fSwKICAgIFBjb25maWc6IHt9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29uZmlnOiB7CiAgICAgICAgZGV0YWlsOiAnJywKICAgICAgICBzYXZlOiAnJywKICAgICAgICBkZWxldGU6ICcnLAogICAgICAgIHVwZGF0ZTogJycsCiAgICAgICAgbGlzdDogJy9sb2dDb21wYW55L2dldFF1YWxpdHlUZXN0aW5nQnlEYXlBbmRiaWNOYW1lJwogICAgICB9LAogICAgICByb3dLZXk6ICdiaWNJZCcsCiAgICAgIG9wdGlvbjogewogICAgICAgIGFkZEJ0bjogZmFsc2UsCiAgICAgICAgZGVsQnRuOiBmYWxzZSwKICAgICAgICBlZGl0QnRuOiBmYWxzZSwKICAgICAgICB2aWV3QnRuOiBmYWxzZSwKICAgICAgICBtZW51OiBmYWxzZSwKICAgICAgICBjb2x1bW46IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5jb2x1bW5fZGF0ZXRpbWUoIui0qOajgOaXpeacnyIsICJkYXRlIiwgZmFsc2UsIHsKICAgICAgICAgIG1pbldpZHRoOiAxODAsCiAgICAgICAgICBmaXhlZDogJ2xlZnQnCiAgICAgICAgfSkpLCBbewogICAgICAgICAgbGFiZWw6ICLllYblrrblkI3np7AiLAogICAgICAgICAgcHJvcDogImJpY05hbWUiLAogICAgICAgICAgbWluV2lkdGg6IDE4MCwKICAgICAgICAgIGZpeGVkOiAnbGVmdCcKICAgICAgICB9LCB7CiAgICAgICAgICBsYWJlbDogIuivgeS5puexu+WeiyIsCiAgICAgICAgICBwcm9wOiAiY2VydGlmaWNhdGVUeXBlIiwKICAgICAgICAgIG1pbldpZHRoOiAxODAKICAgICAgICB9XSwgX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuY29sdW1uX21vbmV5KCLlupTmlLbljZXku7ciLCAidW5pdFByaWNlUmVjZWl2YWJsZSIsIGZhbHNlLCB7CiAgICAgICAgICB2aWV3RGlzcGxheTogZmFsc2UsCiAgICAgICAgICBtaW5XaWR0aDogMTgwCiAgICAgICAgfSkpLCBbewogICAgICAgICAgbGFiZWw6ICLmlbDph4/vvIjku7bvvIkiLAogICAgICAgICAgcHJvcDogIm51bWJlciIsCiAgICAgICAgICBtaW5XaWR0aDogMTgwCiAgICAgICAgfV0sIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmNvbHVtbl9tb25leSgi5bqU5pS25ZCI6K6hIiwgInRvdGFsUmVjZWl2YWJsZXMiLCBmYWxzZSwgewogICAgICAgICAgdmlld0Rpc3BsYXk6IGZhbHNlLAogICAgICAgICAgbWluV2lkdGg6IDE4MAogICAgICAgIH0pKSwgX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuY29sdW1uX21vbmV5KCLkvJjmg6Dph5Hpop0iLCAicHJlZmVyZW50aWFsQW1vdW50IiwgZmFsc2UsIHsKICAgICAgICAgIHZpZXdEaXNwbGF5OiBmYWxzZSwKICAgICAgICAgIG1pbldpZHRoOiAxODAKICAgICAgICB9KSksIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmNvbHVtbl9tb25leSgi5a6e5pS26YeR6aKdIiwgImFtb3VudEFjdHVhbGx5UmVjZWl2ZWQiLCBmYWxzZSwgewogICAgICAgICAgdmlld0Rpc3BsYXk6IGZhbHNlLAogICAgICAgICAgbWluV2lkdGg6IDE4MAogICAgICAgIH0pKSwgW3sKICAgICAgICAgIGxhYmVsOiAi5omA5bGe5py65p6EIiwKICAgICAgICAgIHByb3A6ICJhZmZpbGlhdGVkSW5zdGl0dXRpb25zIiwKICAgICAgICAgIG1pbldpZHRoOiAxODAKICAgICAgICB9XSkKICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICBpZiAodGhpcy5QY29uZmlnICYmIHRoaXMuUGNvbmZpZy5nZXRRdWFsaXR5VGVzdGluZ0J5RGF5QW5kYmljTmFtZSkgewogICAgICB0aGlzLmNvbmZpZy5saXN0ID0gdGhpcy5QY29uZmlnLmdldFF1YWxpdHlUZXN0aW5nQnlEYXlBbmRiaWNOYW1lOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy/ojrflj5bliJfooajliY0KICAgIGxpc3RCZWZvcmU6IGZ1bmN0aW9uIGxpc3RCZWZvcmUoKSB7CiAgICAgIHZhciB0eXBlID0gJzEnOwoKICAgICAgaWYgKHRoaXMucm93LmRheSkgewogICAgICAgIHR5cGUgPSAnMic7CiAgICAgIH0KCiAgICAgIHRoaXMucGFyYW1zLmJpY05hbWUgPSB0aGlzLnJvdy5jb21wYW55TmFtZTsKICAgICAgdGhpcy5wYXJhbXMuZGF0ZSA9IHRoaXMucm93LmRheSB8fCBkYXlqcyh0aGlzLnJvdy5zdGF0aXN0aWNzVGltZSkuZm9ybWF0KCdZWVlZLU1NJykgfHwgJyc7CiAgICAgIHRoaXMucGFyYW1zLnR5cGUgPSB0eXBlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["QualityDay.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <avue-crud v-bind=\"bindVal\" v-on=\"onEvent\" v-model=\"form\" :page.sync=\"page\">\n        </avue-crud>\n    </div>\n</template>\n<script>\nimport crudMix from \"@/mixins/crudMix\";\n/**\n * TODO:每天/每月质检详情\n */\nexport default {\n  mixins: [\n    crudMix,\n  ],\n  props: {\n    row: {},\n    Pconfig: {},\n  },\n  data() {\n    return {\n      config: {\n        detail: '',\n        save: '',\n        delete: '',\n        update: '',\n        list: '/logCompany/getQualityTestingByDayAndbicName'\n      },\n      rowKey: 'bicId',\n      option: {\n        \n        addBtn: false,\n        delBtn: false,\n        editBtn: false,\n        viewBtn: false,\n        menu: false,\n        column: [\n          \n          ...this.column_datetime(\"质检日期\", \"date\", false, { minWidth: 180,fixed: 'left', }),\n          { label: \"商家名称\", prop: \"bicName\", minWidth: 180, fixed: 'left',},\n          { label: \"证书类型\", prop: \"certificateType\", minWidth: 180, },\n          ...this.column_money(\"应收单价\", \"unitPriceReceivable\", false, { viewDisplay: false, minWidth: 180, }),\n          { label: \"数量（件）\", prop: \"number\", minWidth: 180, },\n          ...this.column_money(\"应收合计\", \"totalReceivables\", false, { viewDisplay: false, minWidth: 180, }),\n          ...this.column_money(\"优惠金额\", \"preferentialAmount\", false, { viewDisplay: false, minWidth: 180, }),\n          ...this.column_money(\"实收金额\", \"amountActuallyReceived\", false, { viewDisplay: false, minWidth: 180, }),\n          { label: \"所属机构\", prop: \"affiliatedInstitutions\", minWidth: 180, },\n        ],\n      },\n    }\n  },\n  created() {\n    if (this.Pconfig && this.Pconfig.getQualityTestingByDayAndbicName) {\n      this.config.list = this.Pconfig.getQualityTestingByDayAndbicName;\n    }\n  },\n  methods: {\n    //获取列表前\n    listBefore() {\n      let type = '1';\n      if (this.row.day) {\n        type = '2';\n      }\n      this.params.bicName = this.row.companyName\n      this.params.date = this.row.day || dayjs(this.row.statisticsTime).format('YYYY-MM') || ''\n      this.params.type = type\n    },\n  }\n}\n</script>\n"],"sourceRoot":"src/views/company/list/UsageRecord"}]}