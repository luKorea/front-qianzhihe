{"remainingRequest":"/Users/careershe03/Desktop/front-korea/admin/node_modules/babel-loader/lib/index.js!/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/careershe03/Desktop/front-korea/admin/src/views/role/list/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/careershe03/Desktop/front-korea/admin/src/views/role/list/index.vue","mtime":1623981807680},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <avue-crud v-bind=\"bindVal\" v-on=\"onEvent\" :search.sync=\"search\" v-model=\"form\" :page.sync=\"page\">\n            <template slot-scope=\"scope\" slot=\"controlListForm\">\n                <ControlTree class=\"ControlTree\" :key=\"scope\" @checked=\"checked\" :defaultExpandedKeys=\"form.controlList\" :data=\"controlList\"></ControlTree>\n            </template>\n        </avue-crud>\n    </div>\n</template>\n<script>\nimport crudMix from \"@/mixins/crudMix\";\nimport { mapGetters } from 'vuex'\nimport { req } from '@/utils/req.js'\nimport permissionMix from \"@/mixins/permissionMix\";\nimport ControlTree from \"@/views/role/list/ControlTree\";\n\n/**\n * TODO:角色管理\n */\nexport default {\n  components: {\n    ControlTree\n  },\n  computed: {\n    ...mapGetters([\n      'name'\n    ])\n  },\n  mixins: [\n    crudMix,\n    permissionMix,\n  ],\n  data() {\n    return {\n      controlList: [],\n      controlListChecked: [],\n      isIndeterminate: false,\n      defaultProps: {\n        children: 'controlList',\n        label: 'controlName'\n      },\n      search: {\n        conditionTwo: '',\n      },\n      config: {\n        detail: '/role/findByRId',\n        save: '/role/addRole',\n        delete: '/role/deRoleByUId',\n        update: '/role/updateRole',\n        list: '/role/findAll'\n      },\n      method: {//修改请求method post GET\n        detail: 'GET',\n        delete: 'GET',\n        list: 'GET'\n      },\n      rowKey: 'id',\n      option: {\n        addBtn: true,\n        viewBtn: false,\n        column: [\n          ...this.column_def(\"角色名\", \"roleName\", true, { search: true, searchSpan: 6, fixed: 'left', minWidth: 180, }),\n          ...this.column_textarea(\"备注\", \"remark\", false, { minWidth: 180, }),\n          {\n            label: \"用户权限\", prop: \"controlList\", minWidth: 180,\n            span: 24,\n            hide: true,\n            formslot: true,\n          },\n          {\n            label: \"创建人\", prop: \"addUser\", display: false,\n            formatter: function (row, value, label, column) {\n              return row.addUser ? row.addUser.username : ''\n            },\n          },\n          { label: \"创建时间\", prop: \"addTime\", display: false, minWidth: 180, },\n          {\n            label: \"最后更改人\", prop: \"updateUser\", display: false,\n            formatter: function (row, value, label, column) {\n              return row.updateUser ? row.updateUser.username : ''\n            },\n          },\n          { label: \"最后更改时间\", prop: \"updateTime\", display: false, minWidth: 180, },\n        ]\n      },\n    }\n  },\n  watch: {\n    //监听处理添加时，编辑除用户权限之外的权限，把用户权限清除\n    form: {\n      handler: function (val, oldVal) {\n        val.controlList = this.controlListChecked\n      },\n      deep: true\n    }\n  },\n  methods: {\n    updateBefore() {\n      this.form.controlList = this.controlListChecked\n      return 1;\n    },\n    addBefore() {\n      this.form.controlList = this.controlListChecked\n      return 1;\n    },\n    //选择\n    checked(val) {\n      console.log('checked', val);\n      this.controlListChecked = val;\n    },\n    //删除前\n    delBefore(row) {\n      let rowtemp = row\n      rowtemp = { roleId: row.roleId }\n      return rowtemp\n    },\n    recursive(flag) {\n      let that = this;\n      var recursiveFunction = function () {\n        const getStr = function (list) {\n          list.forEach(function (row) {\n            if (row.controlList && row.controlList.length > 0) {\n              row.controlList = getStr(row.controlList || [])\n            }\n\n            row.disabled = flag;\n          })\n          return list\n        }\n        that.controlList = Object.assign(getStr(that.controlList), {})\n      }\n      recursiveFunction()\n    },\n    //打开前\n    openBefore(type) {\n      let that = this;\n      //获取列表参数给个默认值\n      if (type == 'edit') {\n        that.form.id = that.form.roleId\n        console.log('openBefore', that.form);\n        if (that.form.status && that.form.status == 1) {\n          that.recursive(true)\n        } else {\n          that.recursive(false)\n        }\n      }\n      if (type == 'add') {\n        that.form.controlList = [];\n        that.controlListChecked = [];\n      }\n      that.form = Object.assign(that.form, that.form)\n    },\n    //打开获取数据后\n    openAfter(res, form, index, type) {\n      let that = this\n      form.controlList = res.data.map((item) => {\n        return item.controlId\n      })\n      //form.controlList//去除有上级节点的选中//上级选中下级就会全选\n      let obj = {};\n      var recursiveFunction = function () {\n        const getStr = function (list) {\n          list.forEach(function (row) {\n            if (row.controlList && row.controlList.length > 0) {\n              row.controlList = getStr(row.controlList || [])\n            } else {\n              obj[row.controlId] = true;\n            }\n          })\n          return list\n        }\n        getStr(that.controlList)\n      }\n      recursiveFunction()\n      form.controlList = form.controlList.filter((v) => {\n        return obj[v]\n      })\n      that.controlListChecked = form.controlList;\n      that.form = Object.assign(form, {})\n    },\n    //获取列表后\n    listAfter(data) {\n      this.data.forEach((v) => {\n        v.controlList = [];//声明参数，绑定组件\n      })\n    },\n    //获取控制列表\n    findControl() {\n      let that = this;\n      req('/role/findControl', {}, \"GET\").then(function (res) {\n        that.controlList = res.data\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n  },\n  created() {\n    this.findControl();\n  },\n}\n</script>"],"sourceRoot":"src/views/role/list"}]}