{"remainingRequest":"/Users/careershe03/Desktop/front-korea/admin/node_modules/babel-loader/lib/index.js!/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/careershe03/Desktop/front-korea/admin/src/views/users/list/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/careershe03/Desktop/front-korea/admin/src/views/users/list/index.vue","mtime":1623981807680},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <avue-crud v-bind=\"bindVal\" v-on=\"onEvent\" :search.sync=\"search\" v-model=\"form\" :page.sync=\"page\">\n\n        </avue-crud>\n    </div>\n</template>\n<script>\nimport crudMix from \"@/mixins/crudMix\";\nimport permissionMix from \"@/mixins/permissionMix\";\nimport { mapGetters } from 'vuex'\nimport { req } from '@/utils/req.js'\nimport { required } from '@/utils/rules.js'\n\n/**\n * TODO:用户管理\n */\nexport default {\n\n  computed: {\n    ...mapGetters([\n      'name'\n    ])\n  },\n  mixins: [\n    crudMix,\n    permissionMix,\n  ],\n  data() {\n    return {\n      search: {\n        conditionTwo: '',\n      },\n      config: {\n        detail: '',\n        save: '/user/addUser',\n        delete: '/user/deleteUserById',\n        update: '/user/updateUser',\n        list: '/user/getUser'\n      },\n      method: {//修改请求method post GET\n        delete: 'GET',\n      },\n      rowKey: 'uId',\n      option: {\n        addBtn: true,\n        viewBtn: false,\n        column: [\n          ...this.column_def(\"用户名\", \"username\", true, { search: true, searchSpan: 6, fixed: 'left', minWidth: 180, }),\n          ...this.column_def(\"姓名\", \"name\", true, { minWidth: 180, }),\n          ...this.column_select(\"商家名\", \"company\", true, {\n            minWidth: 180,\n            dicData: [],\n            overHidden: true,\n            formatter: function (row, value, label, column) {\n              return row.company ? row.company.companyName : ''\n            },\n          }),\n          {\n            label: \"登录密码\", prop: \"password\",\n            type: 'password',\n            hide: true,\n            viewDisplay: false,\n          },\n          {\n            label: \"确认密码\", prop: \"comfirmPassword\",\n            type: 'password',\n            hide: true,\n            viewDisplay: false,\n          },\n\n          {\n            label: \"是否启用\", prop: \"lockCount\", addDisplay: false,editDisplay: false,\n            type: 'select',\n            dicData: [\n              { label: '否', value: 0 },\n              { label: '是', value: 2 },\n            ],\n          },\n          // { label: \"状态\", prop: \"lockCountStr\", display: false, },\n          {\n            label: \"用户角色\", prop: \"roleList\", minWidth: 180,\n            multiple: true,\n            type: 'checkbox',\n            all: true,\n            span: 24,\n            dicData: [],\n            overHidden: true,\n            formatter: function (row, value, label, column) {\n              return row.roleList && row.roleList.map(item => {\n                return item.roleName\n              }).join(',')\n            },\n\n          },\n          {\n            label: \"创建人\", prop: \"addUser\", display: false,\n            formatter: function (row, value, label, column) {\n              return row.addUser ? row.addUser.username : ''\n            },\n          },\n          { label: \"创建时间\", prop: \"addTime\", display: false, minWidth: 180, },\n          {\n            label: \"更改人\", prop: \"updateUser\", display: false,\n            formatter: function (row, value, label, column) {\n              return row.updateUser ? row.updateUser.username : ''\n            },\n          },\n          { label: \"更改时间\", prop: \"updateTime\", display: false, minWidth: 180, },\n        ]\n      },\n    }\n  },\n  methods: {\n    //列表前\n    listBefore() {\n      this.params.conditionTwo = this.params.username;\n    },\n    //删除前\n    delBefore(row) {\n      let rowtemp = row\n      rowtemp = { uId: row.id }\n      return rowtemp\n    },\n    //添加前\n    addBefore() {\n      this.form.companyId = this.form.company\n      if (this.form.password) {\n        this.form.password = hex_md5(this.form.password)\n      }\n      return 1\n    },\n    //更新前\n    updateBefore() {\n      this.form.companyId = this.form.company\n      if (this.form.password) {\n        this.form.password = hex_md5(this.form.password)\n      }\n      return 1\n    },\n    //打开前\n    openBefore(type) {\n      let that = this;\n      let password = this.findObject(this.option.column, 'password')\n      let comfirmPassword = this.findObject(this.option.column, 'comfirmPassword')\n      let validator = [{\n        validator: (rule, value, callback) => {\n          if (that.form.password) {\n            if (value === '') {\n              callback(new Error('请再次输入密码'))\n            } else if (value !== that.form.password) {\n              callback(new Error('两次输入密码不一致!'))\n            } else {\n              callback()\n            }\n          } else {\n            callback()\n          }\n        }, trigger: 'blur'\n      },\n\n      ]\n\n      let validator2 = [\n        {\n          validator: (rule, value, callback) => {\n            if (value) {\n              let reg = /(?!.*\\s)(?!^[\\u4E00-\\u9FA5]+$)(?!^[a-zA-Z]+$)(?!^[\\d]+$)(?!^[^\\u4E00-\\u9FA5a-zA-Z\\d]+$)^.{6,16}$/\n              if (!reg.test(value)) {\n                callback(new Error('密码必须是由6-16位字母、数字、特殊字符最少2种组合（不能有中文和空格）'))\n              } else {\n                callback()\n              }\n            } else {\n              callback()\n            }\n          }, trigger: 'blur'\n        },\n      ]\n      if (type === 'add') {\n        password.rules = required('密码').concat(validator2)\n        comfirmPassword.rules = required('确认密码').concat(validator)\n      } else {\n        password.rules = [].concat(validator2)\n        comfirmPassword.rules = validator\n      }\n      if (type == 'edit') {\n        let company = that.form.company;\n        if (company && company.companyId) {\n          that.form.company = company.companyId\n          that.form.companyId = company.companyId\n          that.form.companyName = company.companyName\n        }\n        that.form.roleList = that.form.roleList.map((v) => { return v.roleId })\n        that.form = Object.assign(that.form, {})\n      }\n    },\n    //获取所有商家\n    getAll() {\n      let that = this;\n      req('/company/getAll', {}, \"GET\").then(function (res) {\n        that.option.column.forEach((v) => {\n          if (v.prop == 'company') {\n            v.dicData = res.data.map((item) => {\n              return { label: item.companyName, value: item.companyId }\n            })\n          }\n        })\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //所有权限角色\n    findAll() {\n      let that = this;\n      req('/role/findAll', { pageNum: 1, pageSize: 1000 }, \"GET\").then(function (res) {\n        that.option.column.forEach((v) => {\n          if (v.prop == 'roleList') {\n            v.dicData = res.data.list.map((item) => {\n              return { label: item.roleName, value: item.roleId }\n            })\n          }\n        })\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n  },\n  created() {\n    this.getAll();\n    this.findAll();\n  },\n}\n</script>"],"sourceRoot":"src/views/users/list"}]}