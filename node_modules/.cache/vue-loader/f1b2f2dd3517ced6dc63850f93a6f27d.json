{"remainingRequest":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/careershe03/Desktop/front-korea/admin/src/views/ExportTask/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/careershe03/Desktop/front-korea/admin/src/views/ExportTask/index.vue","mtime":1623981807678},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBjcnVkTWl4IGZyb20gIkAvbWl4aW5zL2NydWRNaXgiOwppbXBvcnQgeyByZXEgfSBmcm9tICdAL3V0aWxzL3JlcS5qcycKLyoqCiAqIFRPRE865a+85Ye66K6w5b2VCiAqLwpleHBvcnQgZGVmYXVsdCB7CiAgbWl4aW5zOiBbCiAgICBjcnVkTWl4LAogIF0sCiAgcHJvcHM6IHsKICAgIHR5cGU6IHt9LAogICAgZXhwb3J0UGFyYW1zOiB7fSwKICAgIFBjb25maWc6IHt9LAogICAgdGl0bGU6IHt9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGVyaXZlRXhjZWxsb2FkaW5nOiBmYWxzZSwKICAgICAgY29uZmlnOiB7CiAgICAgICAgZGV0YWlsOiAnJywKICAgICAgICBzYXZlOiAnJywKICAgICAgICBkZWxldGU6ICcnLAogICAgICAgIHVwZGF0ZTogJycsCiAgICAgICAgbGlzdDogJy9leHBvcnRUYXNrL2dldEV4cG9ydFRhc2tMaXN0JywKICAgICAgICBleHBvcnRFeGNlbDogJycsCiAgICAgIH0sCiAgICAgIG1ldGhvZDogey8v5L+u5pS56K+35rGCbWV0aG9kIHBvc3QgR0VUCiAgICAgICAgbGlzdDogJ0dFVCcsCiAgICAgIH0sCiAgICAgIHJvd0tleTogJ2lkJywKICAgICAgb3B0aW9uOiB7CiAgICAgICAgaW5kZXg6IGZhbHNlLAogICAgICAgIG1lbnU6IGZhbHNlLAogICAgICAgIGNvbHVtbjogWwogICAgICAgICAgeyBsYWJlbDogIklEIiwgcHJvcDogImlkIiwgd2lkdGg6IDYwIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIGxhYmVsOiAi5pON5L2c55So5oi3IiwgcHJvcDogIm5hbWUiLAogICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIChyb3csIHZhbHVlLCBsYWJlbCwgY29sdW1uKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGAke3Jvdy5uYW1lfSgke3Jvdy51c2VyTmFtZX0pYAogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIHsgbGFiZWw6ICLliJvlu7rml7bpl7QiLCBwcm9wOiAiY3JlYXRlVGltZSIgfSwKICAgICAgICAgIC4uLnRoaXMuY29sdW1uX3NlbGVjdCgi54q25oCBIiwgInN0YXR1cyIsIGZhbHNlLCB7CiAgICAgICAgICAgIHdpZHRoOiA2MCwKICAgICAgICAgICAgZGljRGF0YTogWwogICAgICAgICAgICAgIHsgdmFsdWU6IDAsIGxhYmVsOiAn5pyq5a6M5oiQJyB9LAogICAgICAgICAgICAgIHsgdmFsdWU6IDEsIGxhYmVsOiAn5bey5a6M5oiQJyB9LAogICAgICAgICAgICAgIHsgdmFsdWU6IDIsIGxhYmVsOiAn5bey5aSx6LSlJyB9LAogICAgICAgICAgICAgIHsgdmFsdWU6IDMsIGxhYmVsOiAn6YOo5YiG5pWw5o2u5a+85YWl5aSx6LSlJyB9CiAgICAgICAgICAgIF0KICAgICAgICAgIH0pLAogICAgICAgICAgeyBsYWJlbDogIuaWh+S7tuWQjSIsIHByb3A6ICJmaWxlTmFtZSIsIH0sCiAgICAgICAgICB7IGxhYmVsOiAi5paH5Lu25LiL6L29IiwgcHJvcDogImZpbGVQYXRoIiwgc29sdDogdHJ1ZSB9LAogICAgICAgIF0sCiAgICAgIH0sCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgaWYgKHRoaXMuUGNvbmZpZyAmJiB0aGlzLlBjb25maWcuZXhwb3J0VGFzaykgewogICAgICB0aGlzLmNvbmZpZy5saXN0ID0gdGhpcy5QY29uZmlnLmV4cG9ydFRhc2s7CiAgICB9CiAgICBpZiAodGhpcy5QY29uZmlnICYmIHRoaXMuUGNvbmZpZy5leHBvcnRFeGNlbCkgewogICAgICB0aGlzLmNvbmZpZy5leHBvcnRFeGNlbCA9IHRoaXMuUGNvbmZpZy5leHBvcnRFeGNlbDsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8v5a+85Ye6IAogICAgZXhwb3J0VVJMKHVybCkgewogICAgICBsZXQgdGhhdCA9IHRoaXM7CiAgICAgIHRoYXQuZGVyaXZlRXhjZWxsb2FkaW5nID0gdHJ1ZTsKICAgICAgcmVxKHVybCwgdGhpcy5leHBvcnRQYXJhbXMsICJHRVQiLCB0cnVlKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB0aGF0LmRlcml2ZUV4Y2VsbG9hZGluZyA9IGZhbHNlOwogICAgICAgIHRoYXQuZ2V0TGlzdCgpCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHRoYXQuZGVyaXZlRXhjZWxsb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIC8v5YiX6KGo6I635Y+W5YmNCiAgICBsaXN0QmVmb3JlKCkgewogICAgICB0aGlzLnBhcmFtcy50eXBlID0gdGhpcy50eXBlCiAgICB9LAoKICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"index.vue","sourceRoot":"src/views/ExportTask","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <avue-crud v-bind=\"bindVal\" v-on=\"onEvent\" v-model=\"form\" :page.sync=\"page\">\n            <template slot=\"menuLeft\">\n                <el-button type=\"primary\" class=\"el-icon-download\" size=\"small\" :loading=\"deriveExcelloading\" @click.native=\"exportURL(config.exportExcel)\">{{title}}</el-button>\n            </template>\n            <template slot=\"filePath\" slot-scope=\"scope\">\n                <el-link v-if=\"scope.row.filePath&&scope.row.status==1\" target=\"_blank\" :href=\"scope.row.filePath\" class=\"dowloadX\" :download=\"scope.row.fileName+'.xlsx'\" type=\"primary\"\n                    style=\"font-size:12px\" icon=\"el-icon-download\">\n                    下载</el-link>\n            </template>\n        </avue-crud>\n    </div>\n</template>\n<script>\nimport crudMix from \"@/mixins/crudMix\";\nimport { req } from '@/utils/req.js'\n/**\n * TODO:导出记录\n */\nexport default {\n  mixins: [\n    crudMix,\n  ],\n  props: {\n    type: {},\n    exportParams: {},\n    Pconfig: {},\n    title: {}\n  },\n  data() {\n    return {\n      deriveExcelloading: false,\n      config: {\n        detail: '',\n        save: '',\n        delete: '',\n        update: '',\n        list: '/exportTask/getExportTaskList',\n        exportExcel: '',\n      },\n      method: {//修改请求method post GET\n        list: 'GET',\n      },\n      rowKey: 'id',\n      option: {\n        index: false,\n        menu: false,\n        column: [\n          { label: \"ID\", prop: \"id\", width: 60 },\n          {\n            label: \"操作用户\", prop: \"name\",\n            formatter: function (row, value, label, column) {\n              return `${row.name}(${row.userName})`\n            },\n          },\n          { label: \"创建时间\", prop: \"createTime\" },\n          ...this.column_select(\"状态\", \"status\", false, {\n            width: 60,\n            dicData: [\n              { value: 0, label: '未完成' },\n              { value: 1, label: '已完成' },\n              { value: 2, label: '已失败' },\n              { value: 3, label: '部分数据导入失败' }\n            ]\n          }),\n          { label: \"文件名\", prop: \"fileName\", },\n          { label: \"文件下载\", prop: \"filePath\", solt: true },\n        ],\n      },\n    }\n  },\n  created() {\n    if (this.Pconfig && this.Pconfig.exportTask) {\n      this.config.list = this.Pconfig.exportTask;\n    }\n    if (this.Pconfig && this.Pconfig.exportExcel) {\n      this.config.exportExcel = this.Pconfig.exportExcel;\n    }\n  },\n  methods: {\n    //导出 \n    exportURL(url) {\n      let that = this;\n      that.deriveExcelloading = true;\n      req(url, this.exportParams, \"GET\", true).then(function (res) {\n        that.deriveExcelloading = false;\n        that.getList()\n      }).catch(function (error) {\n        that.deriveExcelloading = false;\n      });\n    },\n    //列表获取前\n    listBefore() {\n      this.params.type = this.type\n    },\n\n  }\n}\n</script>\n"]}]}