{"remainingRequest":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/careershe03/Desktop/front-korea/admin/src/views/role/list/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/careershe03/Desktop/front-korea/admin/src/views/role/list/index.vue","mtime":1623981807680},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBjcnVkTWl4IGZyb20gIkAvbWl4aW5zL2NydWRNaXgiOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCcKaW1wb3J0IHsgcmVxIH0gZnJvbSAnQC91dGlscy9yZXEuanMnCmltcG9ydCBwZXJtaXNzaW9uTWl4IGZyb20gIkAvbWl4aW5zL3Blcm1pc3Npb25NaXgiOwppbXBvcnQgQ29udHJvbFRyZWUgZnJvbSAiQC92aWV3cy9yb2xlL2xpc3QvQ29udHJvbFRyZWUiOwoKLyoqCiAqIFRPRE866KeS6Imy566h55CGCiAqLwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ29udHJvbFRyZWUKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsKICAgICAgJ25hbWUnCiAgICBdKQogIH0sCiAgbWl4aW5zOiBbCiAgICBjcnVkTWl4LAogICAgcGVybWlzc2lvbk1peCwKICBdLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb250cm9sTGlzdDogW10sCiAgICAgIGNvbnRyb2xMaXN0Q2hlY2tlZDogW10sCiAgICAgIGlzSW5kZXRlcm1pbmF0ZTogZmFsc2UsCiAgICAgIGRlZmF1bHRQcm9wczogewogICAgICAgIGNoaWxkcmVuOiAnY29udHJvbExpc3QnLAogICAgICAgIGxhYmVsOiAnY29udHJvbE5hbWUnCiAgICAgIH0sCiAgICAgIHNlYXJjaDogewogICAgICAgIGNvbmRpdGlvblR3bzogJycsCiAgICAgIH0sCiAgICAgIGNvbmZpZzogewogICAgICAgIGRldGFpbDogJy9yb2xlL2ZpbmRCeVJJZCcsCiAgICAgICAgc2F2ZTogJy9yb2xlL2FkZFJvbGUnLAogICAgICAgIGRlbGV0ZTogJy9yb2xlL2RlUm9sZUJ5VUlkJywKICAgICAgICB1cGRhdGU6ICcvcm9sZS91cGRhdGVSb2xlJywKICAgICAgICBsaXN0OiAnL3JvbGUvZmluZEFsbCcKICAgICAgfSwKICAgICAgbWV0aG9kOiB7Ly/kv67mlLnor7fmsYJtZXRob2QgcG9zdCBHRVQKICAgICAgICBkZXRhaWw6ICdHRVQnLAogICAgICAgIGRlbGV0ZTogJ0dFVCcsCiAgICAgICAgbGlzdDogJ0dFVCcKICAgICAgfSwKICAgICAgcm93S2V5OiAnaWQnLAogICAgICBvcHRpb246IHsKICAgICAgICBhZGRCdG46IHRydWUsCiAgICAgICAgdmlld0J0bjogZmFsc2UsCiAgICAgICAgY29sdW1uOiBbCiAgICAgICAgICAuLi50aGlzLmNvbHVtbl9kZWYoIuinkuiJsuWQjSIsICJyb2xlTmFtZSIsIHRydWUsIHsgc2VhcmNoOiB0cnVlLCBzZWFyY2hTcGFuOiA2LCBmaXhlZDogJ2xlZnQnLCBtaW5XaWR0aDogMTgwLCB9KSwKICAgICAgICAgIC4uLnRoaXMuY29sdW1uX3RleHRhcmVhKCLlpIfms6giLCAicmVtYXJrIiwgZmFsc2UsIHsgbWluV2lkdGg6IDE4MCwgfSksCiAgICAgICAgICB7CiAgICAgICAgICAgIGxhYmVsOiAi55So5oi35p2D6ZmQIiwgcHJvcDogImNvbnRyb2xMaXN0IiwgbWluV2lkdGg6IDE4MCwKICAgICAgICAgICAgc3BhbjogMjQsCiAgICAgICAgICAgIGhpZGU6IHRydWUsCiAgICAgICAgICAgIGZvcm1zbG90OiB0cnVlLAogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgbGFiZWw6ICLliJvlu7rkuroiLCBwcm9wOiAiYWRkVXNlciIsIGRpc3BsYXk6IGZhbHNlLAogICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIChyb3csIHZhbHVlLCBsYWJlbCwgY29sdW1uKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHJvdy5hZGRVc2VyID8gcm93LmFkZFVzZXIudXNlcm5hbWUgOiAnJwogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIHsgbGFiZWw6ICLliJvlu7rml7bpl7QiLCBwcm9wOiAiYWRkVGltZSIsIGRpc3BsYXk6IGZhbHNlLCBtaW5XaWR0aDogMTgwLCB9LAogICAgICAgICAgewogICAgICAgICAgICBsYWJlbDogIuacgOWQjuabtOaUueS6uiIsIHByb3A6ICJ1cGRhdGVVc2VyIiwgZGlzcGxheTogZmFsc2UsCiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gKHJvdywgdmFsdWUsIGxhYmVsLCBjb2x1bW4pIHsKICAgICAgICAgICAgICByZXR1cm4gcm93LnVwZGF0ZVVzZXIgPyByb3cudXBkYXRlVXNlci51c2VybmFtZSA6ICcnCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgICAgeyBsYWJlbDogIuacgOWQjuabtOaUueaXtumXtCIsIHByb3A6ICJ1cGRhdGVUaW1lIiwgZGlzcGxheTogZmFsc2UsIG1pbldpZHRoOiAxODAsIH0sCiAgICAgICAgXQogICAgICB9LAogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8v55uR5ZCs5aSE55CG5re75Yqg5pe277yM57yW6L6R6Zmk55So5oi35p2D6ZmQ5LmL5aSW55qE5p2D6ZmQ77yM5oqK55So5oi35p2D6ZmQ5riF6ZmkCiAgICBmb3JtOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICh2YWwsIG9sZFZhbCkgewogICAgICAgIHZhbC5jb250cm9sTGlzdCA9IHRoaXMuY29udHJvbExpc3RDaGVja2VkCiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZUJlZm9yZSgpIHsKICAgICAgdGhpcy5mb3JtLmNvbnRyb2xMaXN0ID0gdGhpcy5jb250cm9sTGlzdENoZWNrZWQKICAgICAgcmV0dXJuIDE7CiAgICB9LAogICAgYWRkQmVmb3JlKCkgewogICAgICB0aGlzLmZvcm0uY29udHJvbExpc3QgPSB0aGlzLmNvbnRyb2xMaXN0Q2hlY2tlZAogICAgICByZXR1cm4gMTsKICAgIH0sCiAgICAvL+mAieaLqQogICAgY2hlY2tlZCh2YWwpIHsKICAgICAgY29uc29sZS5sb2coJ2NoZWNrZWQnLCB2YWwpOwogICAgICB0aGlzLmNvbnRyb2xMaXN0Q2hlY2tlZCA9IHZhbDsKICAgIH0sCiAgICAvL+WIoOmZpOWJjQogICAgZGVsQmVmb3JlKHJvdykgewogICAgICBsZXQgcm93dGVtcCA9IHJvdwogICAgICByb3d0ZW1wID0geyByb2xlSWQ6IHJvdy5yb2xlSWQgfQogICAgICByZXR1cm4gcm93dGVtcAogICAgfSwKICAgIHJlY3Vyc2l2ZShmbGFnKSB7CiAgICAgIGxldCB0aGF0ID0gdGhpczsKICAgICAgdmFyIHJlY3Vyc2l2ZUZ1bmN0aW9uID0gZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnN0IGdldFN0ciA9IGZ1bmN0aW9uIChsaXN0KSB7CiAgICAgICAgICBsaXN0LmZvckVhY2goZnVuY3Rpb24gKHJvdykgewogICAgICAgICAgICBpZiAocm93LmNvbnRyb2xMaXN0ICYmIHJvdy5jb250cm9sTGlzdC5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgcm93LmNvbnRyb2xMaXN0ID0gZ2V0U3RyKHJvdy5jb250cm9sTGlzdCB8fCBbXSkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcm93LmRpc2FibGVkID0gZmxhZzsKICAgICAgICAgIH0pCiAgICAgICAgICByZXR1cm4gbGlzdAogICAgICAgIH0KICAgICAgICB0aGF0LmNvbnRyb2xMaXN0ID0gT2JqZWN0LmFzc2lnbihnZXRTdHIodGhhdC5jb250cm9sTGlzdCksIHt9KQogICAgICB9CiAgICAgIHJlY3Vyc2l2ZUZ1bmN0aW9uKCkKICAgIH0sCiAgICAvL+aJk+W8gOWJjQogICAgb3BlbkJlZm9yZSh0eXBlKSB7CiAgICAgIGxldCB0aGF0ID0gdGhpczsKICAgICAgLy/ojrflj5bliJfooajlj4LmlbDnu5nkuKrpu5jorqTlgLwKICAgICAgaWYgKHR5cGUgPT0gJ2VkaXQnKSB7CiAgICAgICAgdGhhdC5mb3JtLmlkID0gdGhhdC5mb3JtLnJvbGVJZAogICAgICAgIGNvbnNvbGUubG9nKCdvcGVuQmVmb3JlJywgdGhhdC5mb3JtKTsKICAgICAgICBpZiAodGhhdC5mb3JtLnN0YXR1cyAmJiB0aGF0LmZvcm0uc3RhdHVzID09IDEpIHsKICAgICAgICAgIHRoYXQucmVjdXJzaXZlKHRydWUpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoYXQucmVjdXJzaXZlKGZhbHNlKQogICAgICAgIH0KICAgICAgfQogICAgICBpZiAodHlwZSA9PSAnYWRkJykgewogICAgICAgIHRoYXQuZm9ybS5jb250cm9sTGlzdCA9IFtdOwogICAgICAgIHRoYXQuY29udHJvbExpc3RDaGVja2VkID0gW107CiAgICAgIH0KICAgICAgdGhhdC5mb3JtID0gT2JqZWN0LmFzc2lnbih0aGF0LmZvcm0sIHRoYXQuZm9ybSkKICAgIH0sCiAgICAvL+aJk+W8gOiOt+WPluaVsOaNruWQjgogICAgb3BlbkFmdGVyKHJlcywgZm9ybSwgaW5kZXgsIHR5cGUpIHsKICAgICAgbGV0IHRoYXQgPSB0aGlzCiAgICAgIGZvcm0uY29udHJvbExpc3QgPSByZXMuZGF0YS5tYXAoKGl0ZW0pID0+IHsKICAgICAgICByZXR1cm4gaXRlbS5jb250cm9sSWQKICAgICAgfSkKICAgICAgLy9mb3JtLmNvbnRyb2xMaXN0Ly/ljrvpmaTmnInkuIrnuqfoioLngrnnmoTpgInkuK0vL+S4iue6p+mAieS4reS4i+e6p+WwseS8muWFqOmAiQogICAgICBsZXQgb2JqID0ge307CiAgICAgIHZhciByZWN1cnNpdmVGdW5jdGlvbiA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zdCBnZXRTdHIgPSBmdW5jdGlvbiAobGlzdCkgewogICAgICAgICAgbGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChyb3cpIHsKICAgICAgICAgICAgaWYgKHJvdy5jb250cm9sTGlzdCAmJiByb3cuY29udHJvbExpc3QubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgIHJvdy5jb250cm9sTGlzdCA9IGdldFN0cihyb3cuY29udHJvbExpc3QgfHwgW10pCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgb2JqW3Jvdy5jb250cm9sSWRdID0gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICAgIHJldHVybiBsaXN0CiAgICAgICAgfQogICAgICAgIGdldFN0cih0aGF0LmNvbnRyb2xMaXN0KQogICAgICB9CiAgICAgIHJlY3Vyc2l2ZUZ1bmN0aW9uKCkKICAgICAgZm9ybS5jb250cm9sTGlzdCA9IGZvcm0uY29udHJvbExpc3QuZmlsdGVyKCh2KSA9PiB7CiAgICAgICAgcmV0dXJuIG9ialt2XQogICAgICB9KQogICAgICB0aGF0LmNvbnRyb2xMaXN0Q2hlY2tlZCA9IGZvcm0uY29udHJvbExpc3Q7CiAgICAgIHRoYXQuZm9ybSA9IE9iamVjdC5hc3NpZ24oZm9ybSwge30pCiAgICB9LAogICAgLy/ojrflj5bliJfooajlkI4KICAgIGxpc3RBZnRlcihkYXRhKSB7CiAgICAgIHRoaXMuZGF0YS5mb3JFYWNoKCh2KSA9PiB7CiAgICAgICAgdi5jb250cm9sTGlzdCA9IFtdOy8v5aOw5piO5Y+C5pWw77yM57uR5a6a57uE5Lu2CiAgICAgIH0pCiAgICB9LAogICAgLy/ojrflj5bmjqfliLbliJfooagKICAgIGZpbmRDb250cm9sKCkgewogICAgICBsZXQgdGhhdCA9IHRoaXM7CiAgICAgIHJlcSgnL3JvbGUvZmluZENvbnRyb2wnLCB7fSwgIkdFVCIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHRoYXQuY29udHJvbExpc3QgPSByZXMuZGF0YQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZpbmRDb250cm9sKCk7CiAgfSwKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/role/list","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <avue-crud v-bind=\"bindVal\" v-on=\"onEvent\" :search.sync=\"search\" v-model=\"form\" :page.sync=\"page\">\n            <template slot-scope=\"scope\" slot=\"controlListForm\">\n                <ControlTree class=\"ControlTree\" :key=\"scope\" @checked=\"checked\" :defaultExpandedKeys=\"form.controlList\" :data=\"controlList\"></ControlTree>\n            </template>\n        </avue-crud>\n    </div>\n</template>\n<script>\nimport crudMix from \"@/mixins/crudMix\";\nimport { mapGetters } from 'vuex'\nimport { req } from '@/utils/req.js'\nimport permissionMix from \"@/mixins/permissionMix\";\nimport ControlTree from \"@/views/role/list/ControlTree\";\n\n/**\n * TODO:角色管理\n */\nexport default {\n  components: {\n    ControlTree\n  },\n  computed: {\n    ...mapGetters([\n      'name'\n    ])\n  },\n  mixins: [\n    crudMix,\n    permissionMix,\n  ],\n  data() {\n    return {\n      controlList: [],\n      controlListChecked: [],\n      isIndeterminate: false,\n      defaultProps: {\n        children: 'controlList',\n        label: 'controlName'\n      },\n      search: {\n        conditionTwo: '',\n      },\n      config: {\n        detail: '/role/findByRId',\n        save: '/role/addRole',\n        delete: '/role/deRoleByUId',\n        update: '/role/updateRole',\n        list: '/role/findAll'\n      },\n      method: {//修改请求method post GET\n        detail: 'GET',\n        delete: 'GET',\n        list: 'GET'\n      },\n      rowKey: 'id',\n      option: {\n        addBtn: true,\n        viewBtn: false,\n        column: [\n          ...this.column_def(\"角色名\", \"roleName\", true, { search: true, searchSpan: 6, fixed: 'left', minWidth: 180, }),\n          ...this.column_textarea(\"备注\", \"remark\", false, { minWidth: 180, }),\n          {\n            label: \"用户权限\", prop: \"controlList\", minWidth: 180,\n            span: 24,\n            hide: true,\n            formslot: true,\n          },\n          {\n            label: \"创建人\", prop: \"addUser\", display: false,\n            formatter: function (row, value, label, column) {\n              return row.addUser ? row.addUser.username : ''\n            },\n          },\n          { label: \"创建时间\", prop: \"addTime\", display: false, minWidth: 180, },\n          {\n            label: \"最后更改人\", prop: \"updateUser\", display: false,\n            formatter: function (row, value, label, column) {\n              return row.updateUser ? row.updateUser.username : ''\n            },\n          },\n          { label: \"最后更改时间\", prop: \"updateTime\", display: false, minWidth: 180, },\n        ]\n      },\n    }\n  },\n  watch: {\n    //监听处理添加时，编辑除用户权限之外的权限，把用户权限清除\n    form: {\n      handler: function (val, oldVal) {\n        val.controlList = this.controlListChecked\n      },\n      deep: true\n    }\n  },\n  methods: {\n    updateBefore() {\n      this.form.controlList = this.controlListChecked\n      return 1;\n    },\n    addBefore() {\n      this.form.controlList = this.controlListChecked\n      return 1;\n    },\n    //选择\n    checked(val) {\n      console.log('checked', val);\n      this.controlListChecked = val;\n    },\n    //删除前\n    delBefore(row) {\n      let rowtemp = row\n      rowtemp = { roleId: row.roleId }\n      return rowtemp\n    },\n    recursive(flag) {\n      let that = this;\n      var recursiveFunction = function () {\n        const getStr = function (list) {\n          list.forEach(function (row) {\n            if (row.controlList && row.controlList.length > 0) {\n              row.controlList = getStr(row.controlList || [])\n            }\n\n            row.disabled = flag;\n          })\n          return list\n        }\n        that.controlList = Object.assign(getStr(that.controlList), {})\n      }\n      recursiveFunction()\n    },\n    //打开前\n    openBefore(type) {\n      let that = this;\n      //获取列表参数给个默认值\n      if (type == 'edit') {\n        that.form.id = that.form.roleId\n        console.log('openBefore', that.form);\n        if (that.form.status && that.form.status == 1) {\n          that.recursive(true)\n        } else {\n          that.recursive(false)\n        }\n      }\n      if (type == 'add') {\n        that.form.controlList = [];\n        that.controlListChecked = [];\n      }\n      that.form = Object.assign(that.form, that.form)\n    },\n    //打开获取数据后\n    openAfter(res, form, index, type) {\n      let that = this\n      form.controlList = res.data.map((item) => {\n        return item.controlId\n      })\n      //form.controlList//去除有上级节点的选中//上级选中下级就会全选\n      let obj = {};\n      var recursiveFunction = function () {\n        const getStr = function (list) {\n          list.forEach(function (row) {\n            if (row.controlList && row.controlList.length > 0) {\n              row.controlList = getStr(row.controlList || [])\n            } else {\n              obj[row.controlId] = true;\n            }\n          })\n          return list\n        }\n        getStr(that.controlList)\n      }\n      recursiveFunction()\n      form.controlList = form.controlList.filter((v) => {\n        return obj[v]\n      })\n      that.controlListChecked = form.controlList;\n      that.form = Object.assign(form, {})\n    },\n    //获取列表后\n    listAfter(data) {\n      this.data.forEach((v) => {\n        v.controlList = [];//声明参数，绑定组件\n      })\n    },\n    //获取控制列表\n    findControl() {\n      let that = this;\n      req('/role/findControl', {}, \"GET\").then(function (res) {\n        that.controlList = res.data\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n  },\n  created() {\n    this.findControl();\n  },\n}\n</script>"]}]}