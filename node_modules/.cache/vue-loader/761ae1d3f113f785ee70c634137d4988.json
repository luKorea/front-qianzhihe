{"remainingRequest":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/careershe03/Desktop/front-korea/admin/src/views/teachers/operation/index.vue?vue&type=style&index=0&id=48e5adf4&scoped=true&lang=scss&","dependencies":[{"path":"/Users/careershe03/Desktop/front-korea/admin/src/views/teachers/operation/index.vue","mtime":1624428068997},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZm9vdGVyLWJ0biB7CiAgZGlzcGxheTogZmxleDsKICBwb3NpdGlvbjogZml4ZWQ7CiAgYm90dG9tOiAwOwogIHJpZ2h0OiAwOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsKICB3aWR0aDogMTAwJTsKICBwYWRkaW5nOiAxMHB4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/teachers/operation","sourcesContent":["<template>\n  <div>\n    <el-form label-width=\"80px\" :model=\"form\" :rules=\"rules\" ref=\"form\">\n      <basic-container>\n        <span class=\"tip-info\"></span>\n        <span class=\"tip-title\">基本信息</span>\n        <div style=\"margin-top: 20px\">\n          <el-row :gutter=\"4\">\n            <el-col :span=\"10\">\n              <el-form-item label=\"教师名称\" required prop=\"name\">\n                <el-input v-model=\"form.name\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-form-item label=\"教师类型\" required prop=\"teacherType\">\n                <el-select v-model=\"form.teacherType\" placeholder=\"请选择\" clearable style=\"width: 100%\">\n                  <template v-if=\"teacherList && teacherList.length > 0\">\n                    <el-option v-for=\"item in teacherList\" :label=\"item.name\" :value=\"item.name\"></el-option>\n                  </template>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row :gutter=\"4\">\n            <el-col :span=\"10\">\n              <el-form-item label=\"手机号\" required prop=\"phone\">\n                <el-input v-model=\"form.phone\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-form-item label=\"备注\">\n                <el-input v-model=\"form.note\"></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </div>\n      </basic-container>\n      <basic-container>\n        <span class=\"tip-info\"></span>\n        <span class=\"tip-title\">账号信息</span>\n        <div style=\"margin-top: 20px\">\n          <el-row :gutter=\"4\">\n            <el-col :span=\"10\">\n              <el-form-item label=\"登录账号\" required prop=\"username\">\n                <el-input v-model=\"form.username\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-form-item label=\"登录密码\" required prop=\"password\">\n                <el-input v-model=\"form.password\" type=\"password\" clearable></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </div>\n      </basic-container>\n    </el-form>\n    <div class=\"footer-btn\">\n      <el-button style=\"color: #475B75\" @click=\"goBack\">取消</el-button>\n      <el-button type=\"primary\" @click=\"operationData\">{{text}}</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {selectTypeList} from \"../../../api/search\";\nimport {\n  validatePassword,\n  validatePhone,\n  validateTeacherName,\n  validateTeacherType,\n  validateUsername\n} from \"../../../utils/validate\";\nimport {addTeacher, getEditInfo} from \"../../../api/taecher\";\n\nexport default {\n  name: \"index\",\n  data() {\n    return {\n      type: 'add',\n      text: '立即添加',\n      form: {\n        name: '', // 教师名称\n        password: '', // 密码\n        phone: '', //手机号\n        teacherType: '', //教师类型\n        username: '', // 用户名\n        note: ''\n      },\n      rules: {\n        username: [{required: true, trigger: 'blur', validator: validateUsername}],\n        password: [{required: true, trigger: 'blur', validator: validatePassword}],\n        name: [{required: true, trigger: 'blur', validator: validateTeacherName}],\n        teacherType: [{required: true, trigger: 'blur', validator: validateTeacherType}],\n        phone: [{required: true, trigger: 'blur', validator: validatePhone}],\n      },\n      teacherList: []\n    }\n  },\n  mounted() {\n    let {type, id} = this.$route.query;\n    this.type = type;\n    this.text = type === 'add' ? '立即添加' : '保存';\n    this.$route.meta.title = type === 'add' ? '新增教师' : '编辑教师';\n    this.id = id;\n    this.getTeacherType();\n    this.switchData();\n  },\n  methods: {\n    switchData() {\n      switch (this.type) {\n        case \"add\":\n          break;\n        case \"edit\":\n          this.getEditData(this.id);\n          break;\n      }\n    },\n    getTeacherType() {\n      selectTypeList('teacherType')\n          .then(res => {\n            if (res.errorCode === 200) {\n              this.teacherList = res.data;\n            }\n          })\n    },\n    getEditData(id) {\n      getEditInfo(id)\n      .then(res => {\n        if (res.errorCode === 200) {\n          this.form = res.data;\n        }\n      })\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    operationData() {\n      let that = this;\n      that.$refs['form'].validate(valid => {\n        if (valid) {\n          if (that.type === 'add') {\n            that.addData(that.form)\n          } else {\n            that.updateData(that.form)\n          }\n        } else {\n          return false;\n        }\n      })\n    },\n    addData(data) {\n      addTeacher(data)\n      .then(res => {\n        if (res.errorCode === 200) {\n          this.$message.success('新增成功');\n          this.goBack();\n        }\n      })\n    },\n    updateData(data) {\n\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.footer-btn {\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  justify-content: center;\n  align-items: center;\n  background-color: #FFFFFF;\n  width: 100%;\n  padding: 10px;\n}\n</style>"]}]}