{"remainingRequest":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/careershe03/Desktop/front-korea/admin/src/views/users/list/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/careershe03/Desktop/front-korea/admin/src/views/users/list/index.vue","mtime":1623981807680},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/careershe03/Desktop/front-korea/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/users/list","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <avue-crud v-bind=\"bindVal\" v-on=\"onEvent\" :search.sync=\"search\" v-model=\"form\" :page.sync=\"page\">\n\n        </avue-crud>\n    </div>\n</template>\n<script>\nimport crudMix from \"@/mixins/crudMix\";\nimport permissionMix from \"@/mixins/permissionMix\";\nimport { mapGetters } from 'vuex'\nimport { req } from '@/utils/req.js'\nimport { required } from '@/utils/rules.js'\n\n/**\n * TODO:用户管理\n */\nexport default {\n\n  computed: {\n    ...mapGetters([\n      'name'\n    ])\n  },\n  mixins: [\n    crudMix,\n    permissionMix,\n  ],\n  data() {\n    return {\n      search: {\n        conditionTwo: '',\n      },\n      config: {\n        detail: '',\n        save: '/user/addUser',\n        delete: '/user/deleteUserById',\n        update: '/user/updateUser',\n        list: '/user/getUser'\n      },\n      method: {//修改请求method post GET\n        delete: 'GET',\n      },\n      rowKey: 'uId',\n      option: {\n        addBtn: true,\n        viewBtn: false,\n        column: [\n          ...this.column_def(\"用户名\", \"username\", true, { search: true, searchSpan: 6, fixed: 'left', minWidth: 180, }),\n          ...this.column_def(\"姓名\", \"name\", true, { minWidth: 180, }),\n          ...this.column_select(\"商家名\", \"company\", true, {\n            minWidth: 180,\n            dicData: [],\n            overHidden: true,\n            formatter: function (row, value, label, column) {\n              return row.company ? row.company.companyName : ''\n            },\n          }),\n          {\n            label: \"登录密码\", prop: \"password\",\n            type: 'password',\n            hide: true,\n            viewDisplay: false,\n          },\n          {\n            label: \"确认密码\", prop: \"comfirmPassword\",\n            type: 'password',\n            hide: true,\n            viewDisplay: false,\n          },\n\n          {\n            label: \"是否启用\", prop: \"lockCount\", addDisplay: false,editDisplay: false,\n            type: 'select',\n            dicData: [\n              { label: '否', value: 0 },\n              { label: '是', value: 2 },\n            ],\n          },\n          // { label: \"状态\", prop: \"lockCountStr\", display: false, },\n          {\n            label: \"用户角色\", prop: \"roleList\", minWidth: 180,\n            multiple: true,\n            type: 'checkbox',\n            all: true,\n            span: 24,\n            dicData: [],\n            overHidden: true,\n            formatter: function (row, value, label, column) {\n              return row.roleList && row.roleList.map(item => {\n                return item.roleName\n              }).join(',')\n            },\n\n          },\n          {\n            label: \"创建人\", prop: \"addUser\", display: false,\n            formatter: function (row, value, label, column) {\n              return row.addUser ? row.addUser.username : ''\n            },\n          },\n          { label: \"创建时间\", prop: \"addTime\", display: false, minWidth: 180, },\n          {\n            label: \"更改人\", prop: \"updateUser\", display: false,\n            formatter: function (row, value, label, column) {\n              return row.updateUser ? row.updateUser.username : ''\n            },\n          },\n          { label: \"更改时间\", prop: \"updateTime\", display: false, minWidth: 180, },\n        ]\n      },\n    }\n  },\n  methods: {\n    //列表前\n    listBefore() {\n      this.params.conditionTwo = this.params.username;\n    },\n    //删除前\n    delBefore(row) {\n      let rowtemp = row\n      rowtemp = { uId: row.id }\n      return rowtemp\n    },\n    //添加前\n    addBefore() {\n      this.form.companyId = this.form.company\n      if (this.form.password) {\n        this.form.password = hex_md5(this.form.password)\n      }\n      return 1\n    },\n    //更新前\n    updateBefore() {\n      this.form.companyId = this.form.company\n      if (this.form.password) {\n        this.form.password = hex_md5(this.form.password)\n      }\n      return 1\n    },\n    //打开前\n    openBefore(type) {\n      let that = this;\n      let password = this.findObject(this.option.column, 'password')\n      let comfirmPassword = this.findObject(this.option.column, 'comfirmPassword')\n      let validator = [{\n        validator: (rule, value, callback) => {\n          if (that.form.password) {\n            if (value === '') {\n              callback(new Error('请再次输入密码'))\n            } else if (value !== that.form.password) {\n              callback(new Error('两次输入密码不一致!'))\n            } else {\n              callback()\n            }\n          } else {\n            callback()\n          }\n        }, trigger: 'blur'\n      },\n\n      ]\n\n      let validator2 = [\n        {\n          validator: (rule, value, callback) => {\n            if (value) {\n              let reg = /(?!.*\\s)(?!^[\\u4E00-\\u9FA5]+$)(?!^[a-zA-Z]+$)(?!^[\\d]+$)(?!^[^\\u4E00-\\u9FA5a-zA-Z\\d]+$)^.{6,16}$/\n              if (!reg.test(value)) {\n                callback(new Error('密码必须是由6-16位字母、数字、特殊字符最少2种组合（不能有中文和空格）'))\n              } else {\n                callback()\n              }\n            } else {\n              callback()\n            }\n          }, trigger: 'blur'\n        },\n      ]\n      if (type === 'add') {\n        password.rules = required('密码').concat(validator2)\n        comfirmPassword.rules = required('确认密码').concat(validator)\n      } else {\n        password.rules = [].concat(validator2)\n        comfirmPassword.rules = validator\n      }\n      if (type == 'edit') {\n        let company = that.form.company;\n        if (company && company.companyId) {\n          that.form.company = company.companyId\n          that.form.companyId = company.companyId\n          that.form.companyName = company.companyName\n        }\n        that.form.roleList = that.form.roleList.map((v) => { return v.roleId })\n        that.form = Object.assign(that.form, {})\n      }\n    },\n    //获取所有商家\n    getAll() {\n      let that = this;\n      req('/company/getAll', {}, \"GET\").then(function (res) {\n        that.option.column.forEach((v) => {\n          if (v.prop == 'company') {\n            v.dicData = res.data.map((item) => {\n              return { label: item.companyName, value: item.companyId }\n            })\n          }\n        })\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //所有权限角色\n    findAll() {\n      let that = this;\n      req('/role/findAll', { pageNum: 1, pageSize: 1000 }, \"GET\").then(function (res) {\n        that.option.column.forEach((v) => {\n          if (v.prop == 'roleList') {\n            v.dicData = res.data.list.map((item) => {\n              return { label: item.roleName, value: item.roleId }\n            })\n          }\n        })\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n  },\n  created() {\n    this.getAll();\n    this.findAll();\n  },\n}\n</script>"]}]}